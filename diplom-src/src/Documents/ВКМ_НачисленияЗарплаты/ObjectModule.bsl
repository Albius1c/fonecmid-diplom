#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных
Перем МинимальнаяДатаНачала;
Перем МаксимальнаяДатаОкончания;
#КонецОбласти

#Область ПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;

	СформироватьДвижениеПоОкладу();
	СформироватьДвижениеПоОтпуску();
	СформироватьСторноЗаписи();
	РассчитатьОклад();
	РассчитатьОтпуск();
	СформироватьДополлительныеНачисления();

	СформироватьДвижениеВзаиморасчетыССотрудниками();

КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижениеПоОкладу()

	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);

	СтрокаОклада = ОсновныеНачиисления.НайтиСтроки(Отбор);

	Если СтрокаОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	МинимальнаяДатаНачала = СтрокаОклада[0].ДатаНачала;
	МаксимальнаяДатаОкончания = СтрокаОклада[0].ДатаОкончания;

	Для Сч = 1 По СтрокаОклада.Количество() - 1 Цикл

		Если МинимальнаяДатаНачала > СтрокаОклада[Сч].ДатаНачала Тогда
			МинимальнаяДатаНачала = СтрокаОклада[Сч].ДатаНачала;
		КонецЕсли;

		Если МаксимальнаяДатаОкончания < СтрокаОклада[Сч].ДатаОкончания Тогда
			МаксимальнаяДатаОкончания = СтрокаОклада[Сч].ДатаОкончания;
		КонецЕсли;

	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыОсновныеНачиисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыОсновныеНачиисления.Сотрудник.КатегорияСотрудника КАК СотрудникКатегорияСотрудника,
	|	ВКМ_НачисленияЗарплатыОсновныеНачиисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачисленияЗарплатыОсновныеНачиисления.ДатаНачала КАК ДатаНачала,
	|	ВКМ_НачисленияЗарплатыОсновныеНачиисления.ДатаОкончания КАК ДатаОкончания,
	|	ВКМ_НачисленияЗарплатыОсновныеНачиисления.ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТ_Документ
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачиисления КАК ВКМ_НачисленияЗарплатыОсновныеНачиисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыОсновныеНачиисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыОсновныеНачиисления.ВидРасчета = &Оклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
	|ПОМЕСТИТЬ ВТ_ИзменениеОклада
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&МинимальнаяДатаНачала, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_Документ.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_Документ КАК ВТ_Документ)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудников.Период,
	|	ВКМ_УсловияОплатыСотрудников.Сотрудник,
	|	ВКМ_УсловияОплатыСотрудников.Оклад
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|ГДЕ
	|	ВКМ_УсловияОплатыСотрудников.Период > &МинимальнаяДатаНачала
	|	И ВКМ_УсловияОплатыСотрудников.Период <= &МаксимальнаяДатаОкончания
	|	И ВКМ_УсловияОплатыСотрудников.Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_Документ.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_Документ КАК ВТ_Документ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатаНачала.Период КАК ДатаНачала,
	|	ДатаНачала.Сотрудник КАК Сотрудник,
	|	МИНИМУМ(ДатаНачала.Оклад) КАК Оклад,
	|	ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ДатаОкончания.Период, СЕКУНДА, -1), ДАТАВРЕМЯ(3999, 12, 31)) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
	|ИЗ
	|	ВТ_ИзменениеОклада КАК ДатаНачала
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзменениеОклада КАК ДатаОкончания
	|		ПО ДатаНачала.Сотрудник = ДатаОкончания.Сотрудник
	|		И ДатаНачала.Период < ДатаОкончания.Период
	|СГРУППИРОВАТЬ ПО
	|	ДатаНачала.Период,
	|	ДатаНачала.Сотрудник,
	|	ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ДатаОкончания.Период, СЕКУНДА, -1), ДАТАВРЕМЯ(3999, 12, 31))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документ.Сотрудник КАК Сотрудник,
	|	ВТ_Документ.ВидРасчета КАК ВидРасчета,
	|	ВТ_ИнтервалыОклада.Оклад КАК Показатель,
	|	ВЫБОР
	|		КОГДА ВТ_ИнтервалыОклада.ДатаНачала > ВТ_Документ.ДатаНачала
	|			ТОГДА ВТ_ИнтервалыОклада.ДатаНачала
	|		ИНАЧЕ ВТ_Документ.ДатаНачала
	|	КОНЕЦ КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА ВТ_ИнтервалыОклада.ДатаОкончания < ВТ_Документ.ДатаОкончания
	|			ТОГДА КОНЕЦПЕРИОДА(ВТ_ИнтервалыОклада.ДатаОкончания, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ВТ_Документ.ДатаОкончания, ДЕНЬ)
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ВТ_Документ.ГрафикРаботы КАК ГрафикРаботы
	|ИЗ
	|	ВТ_Документ КАК ВТ_Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
	|		ПО ВТ_Документ.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
	|		И ВТ_Документ.ДатаНачала <= ВТ_ИнтервалыОклада.ДатаОкончания
	|		И ВТ_Документ.ДатаОкончания >= ВТ_ИнтервалыОклада.ДатаНачала";

	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксимальнаяДатаОкончания);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ПериодРегистрации = Дата;
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать();
КонецПроцедуры

Процедура СформироватьДвижениеПоОтпуску()

	Для Каждого ТекСтрокаНачисления Из ОсновныеНачиисления Цикл
		Если ТекСтрокаНачисления.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Сторно = Ложь;
			Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
			Движение.ПериодДействияНачало = ТекСтрокаНачисления.ДатаНачала;
			Движение.ПериодДействияКонец = КонецДня(ТекСтрокаНачисления.ДатаОкончания);
			Движение.ПериодРегистрации = Дата;
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(ТекСтрокаНачисления.ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(ТекСтрокаНачисления.ДатаОкончания, -1));
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ГрафикРаботы = ТекСтрокаНачисления.ГрафикРаботы;
		КонецЕсли;
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать();

КонецПроцедуры

Процедура СформироватьСторноЗаписи()

	СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();

	Если Не ЗначениеЗаполнено(СторноЗаписи) Тогда
		Возврат;
	КонецЕсли;

	Для Каждого Запись Из СторноЗаписи Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Запись);
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
		Движение.Результат = 0;
		Движение.ОтработанноДней = 0;
		Движение.Сторно = Истина;
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать();

КонецПроцедуры

Процедура РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор.Ссылка = &Ссылка
	|	И ВидРасчета = &Оклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";

	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Результат = Движение.Показатель * ВыборкаДетальныеЗаписи.Факт / ВыборкаДетальныеЗаписи.План;
		Движение.ОтработанноДней = ВыборкаДетальныеЗаписи.Факт / 8;

		Если Движение.Сторно Тогда
			Движение.Результат = -Движение.Результат;
			Движение.ОтработанноДней = -Движение.ОтработанноДней;
		КонецЕсли;
		
		//Удержание
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.Сотрудник = Движение.Сотрудник;
		ДвижениеНДФЛ.ПериодДействияНачало = Движение.ПериодДействияНачало;
		ДвижениеНДФЛ.ПериодДействияКонец = Движение.ПериодДействияКонец;
		ДвижениеНДФЛ.Результат = Движение.Результат * 13 / 100;
		ДвижениеНДФЛ.ПериодДействияНачало = МинимальнаяДатаНачала;
		ДвижениеНДФЛ.ПериодДействияКонец = МаксимальнаяДатаОкончания;
	КонецЦикла;
	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура РассчитатьОтпуск()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.БазовыйПериодКонец,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК
	|		ЗначениеФактическийПериодДействия
	|ПОМЕСТИТЬ ВТ_Документ
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор.Ссылка = &Ссылка
	|	И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|ПОМЕСТИТЬ ВТ_ДокументОтпуск
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор.Ссылка = &Ссылка
	|	И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документ.Сотрудник,
	|	ВТ_Документ.НомерСтроки,
	|	ВТ_Документ.ЗначениеФактическийПериодДействия КАК Факт,
	|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.Результат, 0)) КАК Результат,
	|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0)) КАК РабЧасы
	|ИЗ
	|	ВТ_Документ КАК ВТ_Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &Оклад) КАК
	|			ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВТ_Документ.Сотрудник = ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник
	|		И ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействия
	|			МЕЖДУ ВТ_Документ.БазовыйПериодНачало И ВТ_Документ.БазовыйПериодКонец
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Документ.Сотрудник,
	|	ВТ_Документ.НомерСтроки,
	|	ВТ_Документ.ЗначениеФактическийПериодДействия";

	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Результат = ВыборкаДетальныеЗаписи.Результат * ВыборкаДетальныеЗаписи.Факт
			/ ВыборкаДетальныеЗаписи.РабЧасы;
		Движение.ОтработанноДней = ВыборкаДетальныеЗаписи.Факт / 8;

		Если Движение.Сторно Тогда
			Движение.Результат = -Движение.Результат;
			Движение.ОтработанноДней = -Движение.ОтработанноДней;
		КонецЕсли;
	
		//Удержание
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.Сотрудник = Движение.Сотрудник;
		ДвижениеНДФЛ.ПериодДействияНачало = Движение.ПериодДействияНачало;
		ДвижениеНДФЛ.ПериодДействияКонец = Движение.ПериодДействияКонец;
		ДвижениеНДФЛ.Результат = Движение.Результат * 13 / 100;
		ДвижениеНДФЛ.ПериодДействияНачало = МинимальнаяДатаНачала;
		ДвижениеНДФЛ.ПериодДействияКонец = МаксимальнаяДатаОкончания;
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура СформироватьДополлительныеНачисления()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник,
	|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ЧасовКОплатеОборот) КАК ЧасовКОплате,
	|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот) КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&МинимальнаяДатаНачала, &МаксимальнаяДатаОкончания,
	|		Регистратор, Сотрудник.КатегорияСотрудника = &КатегорияСотрудников) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник";

	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", КонецДня(МаксимальнаяДатаОкончания));
	Запрос.УстановитьПараметр("КатегорияСотрудников", Перечисления.ВКМ_КатегорияСотрудников.Специалисты);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия;
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;

		Движение.ПериодДействияНачало = МинимальнаяДатаНачала;
		Движение.ПериодДействияКонец = КонецДня(МаксимальнаяДатаОкончания);
		Движение.Результат = ВыборкаДетальныеЗаписи.СуммаКОплате;
		Движение.ОтработаноЧасов = ВыборкаДетальныеЗаписи.ЧасовКОплате;
	
		//Удержание
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.Сотрудник = Движение.Сотрудник;
		ДвижениеНДФЛ.ПериодДействияНачало = Движение.ПериодДействияНачало;
		ДвижениеНДФЛ.ПериодДействияКонец = Движение.ПериодДействияКонец;
		ДвижениеНДФЛ.Результат = Движение.Результат * 13 / 100;
		ДвижениеНДФЛ.ПериодДействияНачало = МинимальнаяДатаНачала;
		ДвижениеНДФЛ.ПериодДействияКонец = МаксимальнаяДатаОкончания;
	КонецЦикла;

	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();

КонецПроцедуры

Процедура СформироватьДвижениеВзаиморасчетыССотрудниками()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник,
	|	ВКМ_ОсновныеНачисления.Результат КАК ОсновныеНачисления,
	|	0 КАК ДополнительныеНачисления,
	|	0 КАК Удержание,
	|	ВКМ_ОсновныеНачисления.Регистратор
	|ПОМЕСТИТЬ ВТ_ДвижениеПоРегистру
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.Сотрудник,
	|	0,
	|	ВКМ_ДополнительныеНачисления.Результат,
	|	0,
	|	ВКМ_ДополнительныеНачисления.Регистратор
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_Удержания.Сотрудник,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ВКМ_Удержания.Результат),
	|	ВКМ_Удержания.Регистратор
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_Удержания.Сотрудник,
	|	ВКМ_Удержания.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДвижениеПоРегистру.Регистратор,
	|	ВТ_ДвижениеПоРегистру.Сотрудник,
	|	СУММА(ВТ_ДвижениеПоРегистру.ОсновныеНачисления) КАК ОсновныеНачисления,
	|	СУММА(ВТ_ДвижениеПоРегистру.ДополнительныеНачисления) КАК ДополнительныеНачисления,
	|	СУММА(ВТ_ДвижениеПоРегистру.Удержание) КАК Удержание
	|ИЗ
	|	ВТ_ДвижениеПоРегистру КАК ВТ_ДвижениеПоРегистру
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДвижениеПоРегистру.Регистратор,
	|	ВТ_ДвижениеПоРегистру.Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	НаборЗаписейВзаиморасчетыССотрудниками = РегистрыНакопления.ВКМ_ВзаиморасчетыССотрудниками.СоздатьНаборЗаписей();
	НаборЗаписейВзаиморасчетыССотрудниками.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписейВзаиморасчетыССотрудниками.Прочитать();
	НаборЗаписейВзаиморасчетыССотрудниками.Очистить();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Запись = НаборЗаписейВзаиморасчетыССотрудниками.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетальныеЗаписи);
		Запись.Период = Дата;
		Запись.Сумма = ВыборкаДетальныеЗаписи.ОсновныеНачисления + ВыборкаДетальныеЗаписи.ДополнительныеНачисления
			- ВыборкаДетальныеЗаписи.Удержание;

	КонецЦикла;
	НаборЗаписейВзаиморасчетыССотрудниками.Записать();

КонецПроцедуры

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли