#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников //<ИмяТаблицыФормы>

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	ПроверитьДлительностиОтпуска();
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	ПроверитьДлительностиОтпуска();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

// Код процедур и функций

&НаКлиенте
Процедура АнализГрафика(Команда)
	АдресВХ = ПоместитьТЧВоВременноеХранилищеНаСервере();

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВХ", АдресВХ);

	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьДлительностиОтпуска()

	ТекСтрока = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	Если Не КонтрольЗаполненияДат(ТекСтрока) Тогда
		Возврат;
	КонецЕсли;
	ТекСтрока.КоличествоДнейОтпуска = (НачалоДня(ТекСтрока.ДатаОкончания) - НачалоДня(ТекСтрока.ДатаНачала)) / (60 * 60
		* 24);

	ПолучитьДанныеРасчетаДнейОтпуска(ТекСтрока.Сотрудник, ТекСтрока.ДатаНачала, ТекСтрока.ДатаОкончания);

КонецПроцедуры

&НаКлиенте
Функция КонтрольЗаполненияДат(ТекСтрока)
	ДатаНачала = ТекСтрока.ДатаНачала;
	ДатаОкончания = ТекСтрока.ДатаОкончания;

	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
		НачалоГода = НачалоГода(Объект.Год);
		КонецГода = КонецГода(Объект.Год);

		Если Не ((ДатаНачала >= НачалоГода И ДатаНачала <= КонецГода) И (ДатаОкончания >= НачалоГода И ДатаОкончания
			<= КонецГода)) Тогда
			ТекСтрока.ДатаНачала = Дата(1, 1, 1);
			ТекСтрока.ДатаОкончания = Дата(1, 1, 1);
			Возврат Ложь;
		КонецЕсли;
		Если НачалоДня(ДатаНачала) < НачалоДня(ДатаОкончания) Тогда
			Возврат Истина;
		КонецЕсли;
		//ОбщегоНазначения.СообщитьПользователю("Неправльно указан период");
	КонецЕсли;

	Возврат Ложь;

КонецФункции

&НаСервере
Процедура ПолучитьДанныеРасчетаДнейОтпуска(Сотрудник, ДатаНачала, ДатаОкончания)

	Отбор = Новый Структура("Сотрудник", Сотрудник);

	НайденыеСтроки = Объект.ОтпускаСотрудников.НайтиСтроки(Отбор);
	Для Каждого Строка Из НайденыеСтроки Цикл
		Строка.КоличествоДнейОтпуска = (НачалоДня(Строка.ДатаОкончания) - НачалоДня(Строка.ДатаНачала)) / (60 * 60 * 24);
	КонецЦикла;

	ТаблЗнач = Объект.ОтпускаСотрудников.Выгрузить(Отбор);

	ИтогКоличествоДней = ТаблЗнач.Итог("КоличествоДнейОтпуска");

	Количество = НайденыеСтроки.Количество();

	Номер = 1;
	Для Каждого Строка Из НайденыеСтроки Цикл

		Строка.КоличествоДнейОтпуска = ИтогКоличествоДней;

		Если ИтогКоличествоДней > 28 И Номер = Количество Тогда
			ТекстШаблона = СтрШаблон("Превшен лимит 28 дней, на %1 д.", ИтогКоличествоДней - 28);
			ОбщегоНазначения.СообщитьПользователю(ТекстШаблона, , "Объект.ОтпускаСотрудников[" + (Строка.НомерСтроки - 1)
				+ "].ДатаОкончания");
		КонецЕсли;

		Номер = Номер + 1;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПоместитьТЧВоВременноеХранилищеНаСервере()
	ТаблицаЗначенийТовары = Объект.ОтпускаСотрудников.Выгрузить();
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЗначенийТовары);
КонецФункции



//&НаСервере
//Процедура 
#КонецОбласти